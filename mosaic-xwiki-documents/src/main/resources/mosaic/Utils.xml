<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <parent>mosaic.WebHome</parent>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1412948906000</date>
  <creationDate>1412948866000</creationDate>
  <contentUpdateDate>1412948906000</contentUpdateDate>
  <version>1.1</version>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <web>mosaic</web>
  <name>Utils</name>
  <title>Utils</title>
<content>{{groovy}}
def CLAZZ = "mosaic.Organization";
def TAG_CLASS = "XWiki.TagClass";
def SPACE = "wiki";

def getPropValue(obj, propName) {
  def prop = obj.get(propName);
  if (prop != null)
    return prop.getValue();
  else
    return "";
}

def getPropValueAsList(obj, propName, separator) {
  def list = new ArrayList();
  def prop = obj.get(propName);
  if (prop != null &amp;&amp; prop.getValue() != null) {
    prop = prop.getValue().split(separator);
    prop.each() {
      list.add(it);
    }
  }
  if (list.size() == 1 &amp;&amp; list.get(0).length() == 0)
    return null;
  return list;
}

def jsonToDocument(json) {
   def props = json.properties;
   def geometry = json.geometry;
   def id = props.id;
   def docOrg = xwiki.getDocument("${SPACE}.${id}");
   def objOrg = docOrg.getObject(CLAZZ);
   if (!objOrg) {
      idx = docOrg.createNewObject(CLAZZ);
      objOrg = docOrg.getObject(CLAZZ, idx);
   }
   objOrg.set("name", props.name);
   objOrg.set("url", props.url);
   objOrg.set("category", props.category);
   objOrg.set("description", props.description);
   objOrg.set("creationYear", "${props.creationyear}".toString());
   objOrg.set("streetAddress", props.address);
   if (props.postcode != null)
     objOrg.set("postcode", "${props.postcode}".toString());
   objOrg.set("city", props.city);
   objOrg.set("country", props.country);
   objOrg.set("phone", props.phone);
   objOrg.set("email", props.email);
   objOrg.set("twitter", props.twitter);
   objOrg.set("facebook", props.facebook);
   objOrg.set("googlePlus", props.googleplus);
   objOrg.set("linkedIn", props.linkedIn);
   objOrg.set("latitude", new Double(geometry.coordinates[1]));
   objOrg.set("longitude", new Double(geometry.coordinates[0]));

   def objTags = docOrg.getObject(TAG_CLASS);
   if (!objTags) {
     idx = docOrg.createNewObject(TAG_CLASS);
     objTags = docOrg.getObject(TAG_CLASS, idx);
   }
   objTags.set("tags", props.tags);
   docOrg.save("saving from map form");
   return true;
}

def organizationToJson(docFullName, counter) {
  def doc = xwiki.getXWiki().getDocument(docFullName, xcontext.context);
  def obj = doc.getObject(CLAZZ);
  def vName = getPropValue(obj, "name");
  def vUrl = getPropValue(obj, "url")
  def vDesc = getPropValue(obj, "description");
  def vCategory = getPropValue(obj, "category");

  def tagObj = doc.getObject(TAG_CLASS);
  def vTags = getPropValue(tagObj, "tags");
  def list = new ArrayList();
  vTags.each() {
    list.add(it);
  }
  vTags = list;

  //-------- ADDRESS
  def vAddress = getPropValue(obj, "streetAddress");
  def vPostcode = getPropValue(obj, "postcode");
  def vCity = getPropValue(obj, "city");
  def vCountry = getPropValue(obj, "country");

  def vCreationYear = getPropValue(obj, "creationYear");

  def vEmail = getPropValue(obj, "email");
  def vPhone = getPropValue(obj, "phone");

  def vTwitter = getPropValue(obj, "twitter");
  def vFacebook = getPropValue(obj, "facebook");
  def vGooglePlus = getPropValue(obj, "googlePlus");
  def vLinkedIn = getPropValue(obj, "linkedIn");

  //-------- GEOMETRY
  def coords = new ArrayList();
  coords.add(getPropValue(obj, "longitude"));
  coords.add(getPropValue(obj, "latitude"));

  def builder = new groovy.json.JsonBuilder()
   def root = builder {
           id doc.name
           type "Feature"
           properties {
             id doc.name
             type "organization"
             name vName
             url vUrl
             category vCategory
             tags vTags
             description vDesc
             creationyear vCreationYear
             address vAddress
             postcode vPostcode
             city vCity
             country vCountry
             email vEmail
             phone vPhone
             twitter vTwitter
             facebook vFacebook
             googlePlue vGooglePlus
             linkedIn vLinkedIn
           }
           geometry {
              type "Point"
              coordinates coords
           }
   }
  return builder.toString().trim();
}

{{/groovy}}</content></xwikidoc>
